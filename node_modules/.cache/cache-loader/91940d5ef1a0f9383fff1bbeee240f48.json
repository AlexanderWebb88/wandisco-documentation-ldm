{"remainingRequest":"/Users/catrionabarker/Repos/wandisco-documentation-ldm/node_modules/babel-loader/lib/index.js??ref--8-1!/Users/catrionabarker/Repos/wandisco-documentation-ldm/node_modules/@docusaurus/mdx-loader/src/index.js??ref--8-2!/Users/catrionabarker/Repos/wandisco-documentation-ldm/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--8-3!/Users/catrionabarker/Repos/wandisco-documentation-ldm/docs/getting-started.md","dependencies":[{"path":"/Users/catrionabarker/Repos/wandisco-documentation-ldm/docs/getting-started.md","mtime":1593600846976},{"path":"/Users/catrionabarker/Repos/wandisco-documentation-ldm/.docusaurus/docusaurus-plugin-content-docs/site-docs-getting-started-md-d58.json","mtime":1593605126303},{"path":"/Users/catrionabarker/Repos/wandisco-documentation-ldm/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/catrionabarker/Repos/wandisco-documentation-ldm/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/catrionabarker/Repos/wandisco-documentation-ldm/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/catrionabarker/Repos/wandisco-documentation-ldm/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}